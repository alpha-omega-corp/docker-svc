syntax = "proto3";

package docker;
option go_package = "github.com/alpha-omega-corp/docker-svc/proto";

service DockerService {
  rpc CreatePackage(CreatePackageRequest) returns (CreatePackageResponse) {}
  rpc GetPackages(GetPackagesRequest) returns (GetPackagesResponse) {}
  rpc GetPackage(GetPackageRequest) returns (GetPackageResponse) {}
  rpc DeletePackage(DeletePackageRequest) returns (DeletePackageResponse) {}
  rpc PushPackage(PushPackageRequest) returns (PushPackageResponse) {}
  rpc ContainerPackage(ContainerPackageRequest) returns (ContainerPackageResponse) {}
  rpc DeleteContainer(DeleteContainerRequest) returns (DeleteContainerResponse) {}
  rpc GetContainers(GetContainersRequest) returns (GetContainersResponse) {}
  rpc GetContainerLogs(GetContainerLogsRequest) returns (GetContainerLogsResponse) {}

  rpc GetPackageFile(GetPackageFileRequest) returns (GetPackageFileResponse) {}
}

message GetPackageFileRequest {
  string name = 1;
  string path = 2;
}

message GetPackageFileResponse {
  bytes content = 1;
}

message GetPackageResponse {
  repeated PackageVersion versions = 1;
}

message PackageVersion {
  string name = 1;
  string path = 2;
  string sha = 3;
  string link = 4;
}

message DeleteContainerRequest {
  string containerId = 1;
}

message DeleteContainerResponse {
  int64 status = 1;
}

message ContainerPackageRequest {
  int64 id = 1;
  string name = 2;
}

message ContainerPackageResponse {
  int64 status = 1;
  int64 containerId = 2;
}

message PushPackageRequest {
  string name = 1;
  int64 tag = 2;
}

message PushPackageResponse {
  int64 status = 1;
}

message CreatePackageRequest {
  bytes dockerfile = 1;
  string workdir = 2;
  string tag = 3;
}

message CreatePackageResponse {
  int64 status = 1;
}

message GetPackageRequest {
  string name = 1;
}



message GetPackagesRequest {}

message GetPackagesResponse {
  repeated SimplePackage packages = 1;
}

message DeletePackageRequest {
  int64 id = 1;
}

message DeletePackageResponse {
  int64 status = 1;
  string error = 2;
}

message GetContainersRequest {}

message GetContainersResponse {
  repeated Container containers = 1;
}

message GetContainerLogsRequest {
  string containerId = 1;
}

message GetContainerLogsResponse {
  string logs = 1;
}

message Container {
  string id = 1;
  string image = 2;
  string status = 3;
  string command = 4;
  int64 created = 5;
  string state = 6;
  repeated string names = 7;
}

message Package {
  string name = 1;
  repeated File files = 2;
  repeated Container containers = 3;
}

message SimplePackage {
  string type = 1;
  int64 size = 2;
  string name = 3;
  string path = 4;
  string sha = 5;
  string gitUrl = 6;
  string htmlUrl = 7;
  string downloadUrl = 8;
}

message GitPackage {
  int64 id = 1;
  string name = 2;
  string type = 3;
  int64 version = 4;
  string visibility = 5;
  string url = 6;
  string htmlUrl = 7;
  int64 ownerId = 8;
  string ownerName = 9;
  string ownerNode = 10;
  string ownerType = 11;
}

message File {
  string name = 1;
  bytes content = 2;
}
